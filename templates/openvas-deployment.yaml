{{- if .Values.openvas.deployment.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openvas.fullname" . }}-openvas
  labels:
    app.kubernetes.io/name: {{ include "openvas.name" . }}-openvas
    helm.sh/chart: {{ include "openvas.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "openvas.name" $ | indent 6 }}-openvas
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.openvas.podAnnotations }}
      annotation:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "openvas.name" $ | indent 8 }}-openvas
        app,kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.openvas.podLabels }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
    spec:
      {{- with .Values.openvas.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      containers:
      - image: avhost/docker-openvas
        imagePullPolicy: {{ .Values.openvas.imagePullPolicy }}
        name: {{ template "openvas.name" . }}-openvas
        ports:
        - containerPort: {{ .Values.openvas.ports.https_web }}
        - containerPort: {{ .Values.openvas.ports.api_1 }}
        - containerPort: {{ .Values.openvas.ports.api_2 }}
        resources:
          {{- toYaml .Values.openvas.resources | nindent 10 }}
      restartPolicy: {{ .Values.openvas.restartPolicy }}
      serviceAccountName: {}
      volumes: {}
status: {}
{{- end -}}