{{- if .Values.arachni.deployment.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arachni.fullname" . }}-arachni
  labels:
    app.kubernetes.io/name: {{ include "arachni.name" . }}-arachni
    helm.sh/chart: {{ include "arachni.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "arachni.name" $ | indent 6 }}-arachni
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.openvas.podAnnotations }}
      annotation:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "arachni.name" . }}-arachni
        helm.sh/chart: {{ include "arachni.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      containers:
      - image: "{{ .Values.arachni.image }}:{{ .Values.arachni.tag }}"
        imagePullPolicy: "{{ .Values.arachni.pullPolicy}}"
        name: {{ template "arachni.name" . }}-arachni
        ports: 
          - containerPort: {{ .Values.arachni.service.httpPort }}
          - containerPort: {{ .Values.arachni.service.apiPort }}
        command: ["/bin/bash"]
        args: ["-c", "bin/arachni_rest_server --address 0.0.0.0"]
        resources:
          {{- toYaml .Values.arachni.resources | nindent 10 }}
      restartPolicy: {{ .Values.arachni.restartPolicy }}
      serviceAccountName: "{{ include "archerysec.fullname" . }}-sa"
      # volumes: {}
# status: {}
{{- end -}}